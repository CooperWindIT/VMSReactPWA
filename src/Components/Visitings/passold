import React, { useEffect, useState } from "react";
import { QrReader } from "react-qr-reader"; 
import {VMS_URL} from "../Config/Config";

export default function PassCheckIn() {
    const [sessionUserData, setSessionUserData] = useState({});
    const [showScanner, setShowScanner] = useState(false);
    const [scannedData, setScannedData] = useState("");
    const [enteredNumber, setEnteredNumber] = useState("");
    const [status, setStatus] = useState("");

    useEffect(() => {
        const userDataString = sessionStorage.getItem("userData");
        if (userDataString) {
            const userData = JSON.parse(userDataString);
            setSessionUserData(userData);
        } else {
            console.error("User data not found in sessionStorage");
        }
    }, []);

    const handleResult = async (result, error) => {
        if (result) {
            const qrData = result.text;
            setScannedData(qrData);
            setShowScanner(false);

            console.log("Scanned Data:", qrData);

            const payload = {
                OrgId: sessionUserData.OrgId,
                IncNo: qrData,
                UserId: sessionUserData.Id,
                currentTime: new Date().toLocaleTimeString(),
            };
            console.log(payload, 'data senidn to aoi');

            try {
                const response = await fetch(`${VMS_URL}QrCheckinOrCheckOut`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(payload),
                });

                const result = await response.json();
                console.log(result, 'QrCheckinOrCheckOut result');
                if (response.ok) {
                    setStatus(`${result.message} ${result.time}`);
                    console.log("Check-in/out Success:", result);
                } else {
                    console.error("Failed to check in/out:", response.statusText);
                }
            } catch (error) {
                console.error("Error during API call:", error.message);
            }
        }

        if (error) {
            console.error("QR Scan Error:", error.message);
        }
    };

    const handleSubmit = async () => {

            const payload = {
                OrgId: sessionUserData.OrgId,
                IncNo: enteredNumber,
                UserId: sessionUserData.UserId,
                currentTime: new Date().toLocaleTimeString(),
            };

            try {
                const response = await fetch(`${VMS_URL}QrCheckinOrCheckOut`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(payload),
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Check-in/out Success:", result);
                } else {
                    console.error("Failed to check in/out:", response.statusText);
                }
            } catch (error) {
                console.error("Error during API call:", error.message);
            }
    };

    const startScanning = () => {
        setScannedData("");
        setShowScanner(true);
    };

    return (
        <div
            className="offcanvas offcanvas-end"
            tabIndex="-1"
            id="offcanvasRightPassCheckIn"
            aria-labelledby="offcanvasRightLabel"
            // style={{ minWidth: "52%", maxWidth: "52%" }}
        >
            <div className="offcanvas-header">
                <h5>QR Code Check-In/Out</h5>
                <button type="button" className="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div className="offcanvas-body" style={{ marginTop: "-2rem" }}>
                <div>
                    <label className="form-label">Pass Number:</label>
                    <input 
                        type="text"
                        className="form-control"
                        placeholder="Enter Pass Number"
                        value={enteredNumber}
                        onChange={(e) => setEnteredNumber(e.target.value)}
                    />
                </div>
                <div className="mt-9 d-flex">
                    <button className="btn btn-success" onClick={handleSubmit}>Submit</button>
                    <button className="btn btn-primary ms-2" onClick={startScanning}>
                        Scan QR Code
                    </button>
                </div>

                {showScanner && (
                    <QrReader
                        constraints={{ facingMode: "environment" }}
                        onResult={handleResult}
                        style={{ width: "100%" }}
                    />
                )}

                {scannedData && (
                    <p className="text-success mt-3">{status}</p>
                )}
            </div>
        </div>
    );
}
